<!-- Spring configuration for data access tier -->
<beans xmlns="http://www.springframework.org/schema/beans"
 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 	xmlns:context="http://www.springframework.org/schema/context"
 	xmlns:tx="http://www.springframework.org/schema/tx" 
 	xmlns:p="http://www.springframework.org/schema/p"
 	xmlns:aop="http://www.springframework.org/schema/aop"
 	xsi:schemaLocation="
 		http://www.springframework.org/schema/beans  
 		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
 		http://www.springframework.org/schema/context  
 		http://www.springframework.org/schema/context/spring-context-3.0.xsd  
 		http://www.springframework.org/schema/tx  
 		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
 		http://www.springframework.org/schema/aop  
 		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    
    <!-- Scans the class path to satisfy dependencies between classes -->
    <context:component-scan base-package="com.yxz97.hr.dao">
        <context:include-filter type="annotation"
            expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>    
    
    <!-- holding properties for database connectivity /-->
   	<context:property-placeholder location="classpath:jdbc.properties"/>
   	
   	<!-- Enabled annotation driven configuration /-->
	<context:annotation-config/>
	
	<!--  -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
       p:entityManagerFactory-ref="entityManagerFactory"/>
	
    
    <!-- Enabled the inject @PersistentUnit and @PersistenceContext to POJOS -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"  />
    
    <!-- Enabled exception translation
    	When a class in a DAO package is marked with @Repository this class is a candidate 
    	to work in exception translation for any DAO exception 
     -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    
    <!-- DataSource data base connection pool  -->
	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource" 
		p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}"
		p:username="${jdbc.username}"
		p:password="${jdbc.password}" />
	
	<bean id="entityManagerFactory"
       class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
       p:dataSource-ref="dataSource"
       p:jpaVendorAdapter-ref="jpaAdapter"
       p:persistenceUnitName="wctemplatePU">
       <property name="loadTimeWeaver">
          <bean
             class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>        
    </bean>
	
	 <bean id="jpaAdapter"
         class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
         p:database="${jpa.database}"
         p:showSql="${jpa.showSql}"/>	
</beans>
